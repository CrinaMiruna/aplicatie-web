// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using aplicatie_web.Data;

namespace aplicatie_web.Migrations
{
    [DbContext(typeof(aplicatie_webContext))]
    [Migration("20220108202213_ProgramareCategory")]
    partial class ProgramareCategory
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("aplicatie_web.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("aplicatie_web.Models.Programare", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Animal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrenumeClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pret")
                        .HasColumnType("decimal(6,2)");

                    b.Property<string>("SalonID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SalonID1")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SalonID1");

                    b.ToTable("Programare");
                });

            modelBuilder.Entity("aplicatie_web.Models.ProgramareCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int>("ProgramareID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("ProgramareID");

                    b.ToTable("ProgramareCategory");
                });

            modelBuilder.Entity("aplicatie_web.Models.Salon", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NumarSalon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Salon");
                });

            modelBuilder.Entity("aplicatie_web.Models.Programare", b =>
                {
                    b.HasOne("aplicatie_web.Models.Salon", "Salon")
                        .WithMany("Programari")
                        .HasForeignKey("SalonID1");

                    b.Navigation("Salon");
                });

            modelBuilder.Entity("aplicatie_web.Models.ProgramareCategory", b =>
                {
                    b.HasOne("aplicatie_web.Models.Category", "Category")
                        .WithMany("ProgramareCategories")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("aplicatie_web.Models.Programare", "Programare")
                        .WithMany("ProgramareCategories")
                        .HasForeignKey("ProgramareID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Programare");
                });

            modelBuilder.Entity("aplicatie_web.Models.Category", b =>
                {
                    b.Navigation("ProgramareCategories");
                });

            modelBuilder.Entity("aplicatie_web.Models.Programare", b =>
                {
                    b.Navigation("ProgramareCategories");
                });

            modelBuilder.Entity("aplicatie_web.Models.Salon", b =>
                {
                    b.Navigation("Programari");
                });
#pragma warning restore 612, 618
        }
    }
}
